version: "3.9"

services:
  celery-mongodb:
    image: mongo:latest
    container_name: celery-mongodb
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    volumes:
      - celery-mongodb:/data/db
    networks:
      - celery-network

  celery-rabbitmq:
    image: rabbitmq:management
    container_name: celery-rabbitmq
    restart: always
    expose:
      - ${RABBITMQ_PORT}
    env_file:
      - .env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - celery-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  celery-io-worker:
    build:
      context: .
      dockerfile: docker/Dockerfile-soft
    container_name: celery-io-worker
    restart: always
    command: >
      sh -c "WORKER=io celery -A src.celery_conf.celery_app worker -l info -n celery-handler-worker -Q io-worker"
    volumes:
      - .:/app
    networks:
      - celery-network
    env_file:
      - .env
    depends_on:
      - celery-mongodb
      - celery-rabbitmq

  celery-cpu-worker:
    build:
      context: .
      dockerfile: docker/Dockerfile-compute
      args:
        SPACY_MODEL_CORE: ${SPACY_MODEL_CORE}
    container_name: celery-cpu-worker
    restart: always
    command: >
      sh -c "WORKER=cpu celery -A src.celery_conf.celery_app worker -l info -n celery-compute-worker -Q cpu-worker"
    volumes:
      - .:/app
    networks:
      - celery-network
    env_file:
      - .env
    depends_on:
      - celery-mongodb
      - celery-rabbitmq

  celery-sender-worker:
    build:
      context: .
      dockerfile: docker/Dockerfile-soft
    container_name: celery-sender-worker
    restart: always
    command: >
      sh -c "WORKER=sending celery -A src.celery_conf.celery_app worker -l info -n celery-sender-worker -Q sender-worker"
    volumes:
      - .:/app
    networks:
      - celery-network
    env_file:
      - .env
    depends_on:
      - celery-mongodb
      - celery-rabbitmq

  celery-beat:
    build:
      context: .
      dockerfile: docker/Dockerfile-soft
    container_name: celery-beat
    restart: always
    command: >
      sh -c "celery -A src.beat_init.celery_app beat -l info"
    volumes:
      - .:/app
    networks:
      - celery-network
    env_file:
      - .env
    depends_on:
      - celery-rabbitmq
      - celery-mongodb

  celery-flower:
    image: mher/flower:latest
    container_name: celery-flower
    restart: always
    command: >
      sh -c "pip install flower==1.2.0 && \
            celery flower --basic_auth=${FLOWER_USER}:${FLOWER_PASSWORD}"
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - FLOWER_PORT=${FLOWER_PORT}
    networks:
      - celery-network
    ports:
      - ${FLOWER_PORT}:${FLOWER_PORT}
    depends_on:
      - celery-io-worker
      - celery-cpu-worker
      - celery-sender-worker
      - celery-beat


volumes:
  rabbitmq_data:
  celery-mongodb:

networks:
  celery-network:
    driver: bridge